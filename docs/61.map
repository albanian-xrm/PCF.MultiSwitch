{"version":3,"file":"61.d64e40e2.iframe.bundle.js","mappings":"2LAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,i4BAAk4B,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,mCAAmC,MAAQ,GAAG,SAAW,8SAA8S,eAAiB,CAAC,k4BAAk4B,WAAa,MAE9sE,S,mCCEO,MAAMC,E,SAAS,OAAc,CAAC,GACrCA,EAAOC,KAAO,CACZC,iBAAkB,KAClBC,iBAAa,EACbC,kBAAc,EACdC,sBAAkB,EAClBC,kBAAc,EACdC,mBAAe,EACfC,wBAAoB,GAGtBR,EAAOS,WAAa,CAClBC,SAAU,CACRC,QAAS,CACP,mBACA,cACA,mBACA,eACA,eACA,gBACA,uB,8HCxBC,MAAMC,EAAe,eACfC,EAAgB,gBAChBC,EAAe,eACfC,EAAgB,gBAChBC,EAAe,eACfC,EAAe,eACfC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAe,eACfC,EAAe,eACfC,EAAkB,iB,mCCNxB,MAAMC,E,SAAU,OAAc,CAAC,GAEtCA,EAAQd,WAAa,CACnBC,SAAU,CACRC,QAAS,CAAC,kBAAmB,gB,mCCJ1B,MAAMa,E,SAAW,OAAc,CAAC,GAEvCA,EAASvB,KAAO,CACdwB,UAAU,EACVC,SAAS,EACTC,gBAAiB,IAGnBH,EAASf,WAAa,CACpBC,SAAU,CACRC,QAAS,CAAC,a,mCCVP,MAAMiB,E,SAAc,OAAc,CAAC,GAC1CA,EAAY3B,KAAO,CACjB4B,OAAQ,KAGVD,EAAYnB,WAAa,CACvBC,SAAU,CACRC,QAAS,CAAC,W,mCCPP,MAAMmB,E,SAAe,OAAc,CAAC,GAC3CA,EAAa7B,KAAO,CAClB8B,QAAS,GAGXD,EAAarB,WAAa,CACxBC,SAAU,CACRC,QAAS,CAAC,Y,kCCPP,MAAMqB,E,SAAc,OAAc,CAAC,GAC1CA,EAAY/B,KAAO,CACjBgC,YAAa,IACbF,QAAS,GAGXC,EAAYvB,WAAa,CACvBC,SAAU,CACRC,QAAS,CAAC,cAAe,Y,kCCRtB,MAAMuB,E,SAAa,OAAc,CAAC,GACzCA,EAAWjC,KAAO,CAChBwB,UAAU,EACVC,SAAS,EACTC,gBAAiB,IAGnBO,EAAWzB,WAAa,CACtBC,SAAU,CACRC,QAAS,CAAC,Y,8HCfd,MAYA,EAZ4BkB,IACjB,IAAAM,UAAQ,IACJN,EACA,CACCA,SACAO,UAAW,QAGb,CAAC,GACR,CAACP,ICyBR,EAlCwB,CACpB1B,EACAG,EACAD,EACAD,EACAG,EACAC,KACO,IAAA2B,UAAQ,IACX,CAAC,CACGE,UAAW,CAAEC,aAAc,GAC3BC,KAAM,CACFC,WAAYlC,EACZ,0BAA2B,CACvBkC,WAAYhC,IAGpBiC,MAAO,CACHD,WAAYjC,IAEjB,CACC8B,UAAW,CAAEC,aAAc,GAC3BC,KAAM,CACFC,WAAYrC,EACZ,SAAU,CACNqC,WAAYnC,IAGpBoC,MAAO,CACHD,WAAYpC,MAGpB,CAACD,EAAaG,EAAcD,EAAkBD,EAAcG,EAAeC,ICNnF,EAxBuB,CAACkC,EAA0BX,EAAiBY,KACxD,IAAAR,UAAQ,KACX,GAAIQ,EAAY,CACZ,MAAMC,EAAOC,KAAKC,KAAKJ,EAAQK,OAAShB,GAClCiB,EAAe,IAAIC,MAAuBL,GAChD,QAASM,EAAI,EAAGA,EAAIR,EAAQK,OAAQG,SACD,IAA3BF,EAAaE,EAAIN,KACjBI,EAAaE,EAAIN,GAAQ,IAE7BI,EAAaE,EAAIN,GAAM/C,KAAK6C,EAAQQ,IAExC,OAAOF,CACX,CACA,MAAMA,EAAe,IAAIC,MAAuBlB,GAChD,QAASmB,EAAI,EAAGA,EAAIR,EAAQK,OAAQG,SACE,IAA9BF,EAAaE,EAAInB,KACjBiB,EAAaE,EAAInB,GAAW,IAEhCiB,EAAaE,EAAInB,GAASlC,KAAK6C,EAAQQ,IAE3C,OAAOF,CAAY,GACpB,CAACN,EAASX,EAASY,ICE1B,EArBuB,CAACD,EAA0BxC,EAAiDiD,KACxF,IAAAhB,UAAQ,KACX,MAAMiB,EAEF,CAAC,EAaL,OAZAV,EAAQW,SAAQC,IACZF,EAAYE,EAAOC,OAA8B,QAArBrD,GAA8BoD,EAAOE,MAASL,EAAa,CACnFM,KACA,CACIC,MAAOJ,EAAOE,QAEU,CAC5BG,MAAO,CACHD,MAAOJ,EAAOE,QAES,CAAC,CAAC,IAE9BJ,CAAW,GACnB,CAACV,EAASxC,EAAkBiD,I,8UCdnC,YAAgB,EAAW,CAAES,iBAAiB,IAC9C,MAAMC,EAAc,CAAEC,YAAa,IAE7BC,EAAM,EACVZ,aACA1B,YAAW,EACXuC,cACAtB,UACAC,cAAa,EACbhB,kBACAD,UACAuC,YACAlC,UAAU,EACV5B,cACAG,eACAD,mBACAD,eACAG,gBACAC,qBACAN,mBAAmB,SAEnB,MAAMgE,EAA8B,EAAmBF,GACjDG,EAAe,EAAgBhE,EAAaG,EAAcD,EAAkBD,EAAcG,EAAeC,GACzGwC,EAAe,EAAeN,EAASX,EAASY,GAChDS,EAAc,EAAeV,EAASxC,EAAkBiD,GAC9D,OAAOzB,EACL,gBAAC,OAAI0C,UAAU,cAAcC,MAAOH,GAClC,gBAACI,EAAA,EAAK,CAAC3B,YAAU,EAAC4B,OAAQV,GACvBb,EAAawB,KAAI,CAAC9B,EAAS+B,IAC1B,gBAACH,EAAA,EAAK,CAACI,IAAKD,EAAOF,OAAQpB,EAAaU,OAAc,EAAWc,OAAQT,GACtE,MAAAxB,OAAA,EAAAA,EAAS8B,KAAKlB,IACb,MAAMsB,GAAWjD,GAAmB,IAAIkD,WAAWC,GAAUA,IAAUxB,EAAOC,SAAU,EAClFoB,EAAS,OAAKR,EAAaS,EAAU,EAAI,IAAOxB,EAAYE,EAAOC,QACzE,OAAsB,IAAfJ,EACL,gBAAC4B,EAAA,EAAQ,CACPL,IAAKpB,EAAOC,MACZI,MAAOL,EAAO0B,MACdvD,WACAmD,UACAD,OAAQvB,EAAYE,EAAOC,OAC3B0B,SAAU,CAACC,EAAON,IAAYX,EAAUW,IAAW,EAAOtB,EAAOC,SAGnE,gBAAC4B,EAAA,EAAM,CACLT,IAAKpB,EAAOC,MACZI,MAAOL,EAAO0B,MACdvD,WACAmD,UACAK,SAAU,CAACC,EAAON,IAAYX,EAAUW,IAAW,EAAOtB,EAAOC,OACjEoB,SACAS,aAAW,GACb,SAQZ,gCAAE,EAIN,I,4/DClEO,MAAMC,EAsBXC,cAAgB,CAUTC,KACLC,EACAC,EACAC,EACArD,GAEAsD,KAAKF,oBAAsBA,EAC3BE,KAAKtD,UAAYA,EACjBsD,KAAK1B,UAAY,CAACW,EAASE,KAEvBa,KAAKb,MADHF,EACW,CAACE,KAAUa,KAAKb,MAAMc,QAAQC,GAAaA,IAAaf,KAExDa,KAAKb,MAAMc,QAAQC,GAAaA,IAAaf,IAE5Da,KAAKF,qBAAqB,EAG5BE,KAAKG,oBAAoBN,EAC3B,CAEQM,oBAAoBN,GA3D9B,MA4DIG,KAAKlE,SAAW+D,EAAQO,KAAKC,kBAC7BL,KAAKjE,QAAU8D,EAAQO,KAAKE,UAC5BN,KAAKb,MAAQU,EAAQ/E,WAAWyF,UAAUC,KAAO,GACjDR,KAAKxC,WAAoD,MAAvCqC,EAAQ/E,WAAW2F,YAAYD,IACjDR,KAAK9D,OAAS2D,EAAQ/E,WAAWoB,OAAOsE,UAAO,EAC/CR,KAAK5D,QAAUyD,EAAQ/E,WAAWsB,QAAQoE,UAAO,EACjDR,KAAKhD,WAAoD,MAAvC6C,EAAQ/E,WAAWwB,YAAYkE,IACjDR,KAAKtF,iBAAmBmF,EAAQ/E,WAAWJ,iBAAiB8F,UAAO,EACnER,KAAKrF,aAAekF,EAAQ/E,WAAWH,aAAa6F,UAAO,EAC3DR,KAAKxF,YAAcqF,EAAQ/E,WAAWN,YAAYgG,UAAO,EACzDR,KAAKnF,mBAAqBgF,EAAQ/E,WAAWD,mBAAmB2F,UAAO,EACvER,KAAKpF,cAAgBiF,EAAQ/E,WAAWF,cAAc4F,UAAO,EAC7DR,KAAKvF,aAAeoF,EAAQ/E,WAAWL,aAAa+F,UAAO,EAC3DR,KAAKzF,iBAAmBsF,EAAQ/E,WAAWP,iBAAiBiG,IAE5DR,KAAKU,QAAO,SAAAb,EAAQ/E,WAAWyF,UAAUI,iBAA7B,IAAyCC,UAAW,GAClE,CAEQF,OAAO3D,GACb,MAAM8D,GAAM,IAAAC,eACV,EACA,CACEtD,WAAYwC,KAAKxC,WACjB1B,SAAUkE,KAAKlE,SACfC,QAASiE,KAAKjE,QACdgB,UACAf,gBAAiBgE,KAAKb,MACtBb,UAAW0B,KAAK1B,UAChBD,YAAa2B,KAAK9D,OAClBE,QAAS4D,KAAK5D,QACdY,WAAYgD,KAAKhD,WACjBtC,iBAAkBsF,KAAKtF,iBACvBC,aAAcqF,KAAKrF,aACnBH,YAAawF,KAAKxF,YAClBK,mBAAoBmF,KAAKnF,mBACzBD,cAAeoF,KAAKpF,cACpBH,aAAcuF,KAAKvF,aACnBF,iBAAkByF,KAAKzF,kBAEzB,OAGF,IAAAmG,QAAOG,EAAKb,KAAKtD,UACnB,CAMOqE,WAAWlB,GAChBG,KAAKG,oBAAoBN,EAC3B,CAMOmB,aACL,MAAO,CAAET,UAAW,IAAIP,KAAKb,OAC/B,CAMO8B,WACL,IAAAC,wBAAuBlB,KAAKtD,UAC9B,ECzGF,MAiGA,EAjGqC,OACjC,MAAOpC,EAAM6G,IAAc,IAAAC,WACrB1E,GAAY,IAAA2E,QAAuB,OAClC,CAAEC,IAAa,IAAAC,WAAkB,GAElCC,GAAgB,IAAAhF,UAAQ,KAC1B,GAA0B,OAAtBE,EAAU+E,QAAkB,OAChC,MAAMC,EAAiBC,SAASb,cAAc,OAC9CpE,EAAU+E,QAAQG,YAAYF,GAE9B,MAAMF,EACF,IAAI,KAAgC9B,EAAa,CAC7Ca,UAAW,KACXnE,QAAS,KACTqE,YAAa,KACbvE,OAAQ,KACRI,YAAa,KACb5B,iBAAkB,KAClBC,aAAc,KACdH,YAAa,KACbK,mBAAoB,KACpBD,cAAe,KACfH,aAAc,KACdF,iBAAkB,MACnBmH,GAEP,IAAIG,EACAL,EAAcM,SAASC,qBAAqB,aAAc,aA4C9D,OAzCAF,EAAkBG,UAAY,CAC1BC,mBAAmB,EACnBC,WAAY,GACZC,KAAM,YACNC,cAAe,GACfxB,QAAS,CACT,GAGJtG,EAAKyC,QAAQW,SAASC,IAKlBkE,EAAkBG,UAAUpB,QAAQjD,EAAOC,OAASD,CAAM,IAG9D6D,EAAcM,SAASO,wBAAwB,aAAcR,GAC7DL,EAAc3B,QAAQO,KAAKC,kBAAoB/F,EAAKwB,SACpD0F,EAAc3B,QAAQO,KAAKE,UAAYhG,EAAKyB,QAC5CyF,EAAc3B,QAAQyC,gBAAgB,CAClC/B,UAAWjG,EAAK0B,sBAAmB,EACnCE,OAAQ5B,EAAK4B,OACbE,QAAS9B,EAAK8B,QACdqE,YAAanG,EAAKmG,YAClBnE,YAAahC,EAAKgC,YAClB9B,YAAaF,EAAKE,kBAAe,EACjCC,aAAcH,EAAKG,mBAAgB,EACnCC,iBAAkBJ,EAAKI,uBAAoB,EAC3CC,aAAcL,EAAKK,mBAAgB,EACnCC,cAAeN,EAAKM,oBAAiB,EACrCC,mBAAoBP,EAAKO,yBAAsB,EAC/CN,iBAAkBD,EAAKC,uBAAoB,IAG/CiH,EAAce,gBAAgBC,WAAU,KACpChB,EAAc3B,QAAQ4C,YAAYlC,UAAUmC,WAC5CvB,EAAW,CAAEnF,gBAAiBwF,EAAc3B,QAAQ4C,YAAYlC,UAAUC,KAAM,IAGpFgB,EAAcmB,cACPnB,CAAAA,GACR,CAAC9E,EAAU+E,UAqBd,OAnBID,IACAA,EAAc3B,QAAQO,KAAKE,UAAYhG,EAAKyB,QAC5CyF,EAAc3B,QAAQO,KAAKC,kBAAoB/F,EAAKwB,SACpD0F,EAAc3B,QAAQ4C,YAAYrG,QAAQwG,UAAUtI,EAAK8B,SACzDoF,EAAc3B,QAAQ4C,YAAYhC,YAAYmC,UAAUtI,EAAKmG,aAC7De,EAAc3B,QAAQ4C,YAAYvG,OAAO0G,UAAUtI,EAAK4B,QACxDsF,EAAc3B,QAAQ4C,YAAYnG,YAAYsG,UAAUtI,EAAKgC,aAC7DkF,EAAc3B,QAAQ4C,YAAY/H,iBAAiBkI,UAAUtI,EAAKI,kBAClE8G,EAAc3B,QAAQ4C,YAAY9H,aAAaiI,UAAUtI,EAAKK,cAC9D6G,EAAc3B,QAAQ4C,YAAYjI,YAAYoI,UAAUtI,EAAKE,aAC7DgH,EAAc3B,QAAQ4C,YAAYlC,UAAUqC,UAAUtI,EAAK0B,iBAC3DwF,EAAc3B,QAAQ4C,YAAY5H,mBAAmB+H,UAAUtI,EAAKO,oBACpE2G,EAAc3B,QAAQ4C,YAAY7H,cAAcgI,UAAUtI,EAAKM,eAC/D4G,EAAc3B,QAAQ4C,YAAYhI,aAAamI,UAAUtI,EAAKG,cAC9D+G,EAAc3B,QAAQ4C,YAAYlI,iBAAiBqI,UAAUtI,EAAKC,kBAClEiH,EAAcqB,sBAGlB,IAAAC,YAAU,KAAQxB,GAAU,EAAK,GAAI,CAAC5E,EAAU+E,UACzC,gBAAC,OAAIsB,IAAKrG,GAAY,C,mCC3G1B,MAAMsG,EAAyC,CAClDvC,YAAa,CACTwC,YAAa,4DACblG,QAAS,CAAC,IAAK,KACfmG,QAAS,CACPC,KAAM,SACNC,OAAQ,CACN,EAAK,WACL,EAAK,eAGTC,MAAO,CACLC,aAAc,CAAEC,QAAS,cAG7B/I,YAAa,CACX0I,QAAS,CAAEC,KAAM,UAEnBxI,aAAc,CACZuI,QAAS,CAAEC,KAAM,UAEnBzI,iBAAkB,CAChBwI,QAAS,CAAEC,KAAM,UAEnB1I,aAAc,CACZyI,QAAS,CAAEC,KAAM,UAEnBvI,cAAe,CACbsI,QAAS,CAAEC,KAAM,UAEnBtI,mBAAoB,CAClBqI,QAAS,CAAEC,KAAM,UAEnBnH,gBAAiB,CACfkH,QAAS,U,iDCrBV,MAAMM,EAAmC,CAC5CzH,SAAS,EACTG,OAAQ,EACRuE,YAAa,IACbnE,YAAa,IACb5B,iBAAkB,KAClBC,aAAc,KACdH,YAAa,KACbK,mBAAoB,KACpBD,cAAe,KACfH,aAAc,KACdF,iBAAkB,KAClB6B,QAAS,EACTW,QAAS,CACP,CAAEa,MAAO,EAAGyB,MAAO,KAAcxB,MAAO,WACxC,CAAED,MAAO,EAAGyB,MAAO,KAAexB,MAAO,WACzC,CAAED,MAAO,EAAGyB,MAAO,KAAcxB,MAAO,WACxC,CAAED,MAAO,EAAGyB,MAAO,KAAexB,MAAO,WACzC,CAAED,MAAO,EAAGyB,MAAO,KAAcxB,MAAO,WACxC,CAAED,MAAO,EAAGyB,MAAO,KAAcxB,MAAO,WACxC,CAAED,MAAO,EAAGyB,MAAO,KAAgBxB,MAAO,WAC1C,CAAED,MAAO,EAAGyB,MAAO,KAAexB,MAAO,WACzC,CAAED,MAAO,EAAGyB,MAAO,KAAcxB,MAAO,WACxC,CAAED,MAAO,GAAIyB,MAAO,KAAcxB,MAAO,WACzC,CAAED,MAAO,GAAIyB,MAAO,KAAiBxB,MAAO,YAE9C7B,gBAAiB,G,2CC1Cd,MAAMyH,EAAU,IAOvB,EALc,IACV,IAAIC,SAAeC,IACfC,YAAW,IAAMD,KAAWF,EAAU,EAAE,G,uJCE5C1G,EAAU,CAAC,EAEfA,EAAQ8G,kBAAoB,IAC5B9G,EAAQ+G,cAAgB,IAElB/G,EAAQgH,OAAS,SAAc,KAAM,QAE3ChH,EAAQiH,OAAS,IACjBjH,EAAQkH,mBAAqB,IAEhB,IAAI,IAASlH,GAKJ,KAAW,YAAiB,U","sources":["webpack:///./MultiSwitch/app.css","webpack:///./stories/MultiSwitch/Colors.tsx","webpack:///./stories/MultiSwitch/Constants.ts","webpack:///./stories/MultiSwitch/Default.tsx","webpack:///./stories/MultiSwitch/Disabled.tsx","webpack:///./stories/MultiSwitch/FixedHeight.tsx","webpack:///./stories/MultiSwitch/OptionsGroup.tsx","webpack:///./stories/MultiSwitch/Orientation.tsx","webpack:///./stories/MultiSwitch/Visibility.tsx","webpack:///./MultiSwitch/hooks/useStackItemStyles.ts","webpack:///./MultiSwitch/hooks/useSwitchStyles.ts","webpack:///./MultiSwitch/hooks/useRowsColumns.ts","webpack:///./MultiSwitch/hooks/useLabelColors.ts","webpack:///./MultiSwitch/App.tsx","webpack:///./MultiSwitch/index.ts","webpack:///./stories/Template.tsx","webpack:///./stories/argTypes.ts","webpack:///./stories/defaultArgs.ts","webpack:///./stories/delay.ts","webpack:///./MultiSwitch/app.css?1664"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Firefox */\\r\\n.tjola-stack {\\r\\n    scrollbar-width: thin; /* none | auto  */\\r\\n    scrollbar-color: #dbdbdb transparent;\\r\\n  }\\r\\n  \\r\\n  /* The first applies to the thumb of the scrollbar, the second to the track. */\\r\\n  /* Firefox */\\r\\n  \\r\\n  /* Chrome, Edge, Safari */\\r\\n  .tjola-stack::-webkit-scrollbar {\\r\\n    width: 8px; /* vertical scrollbar */\\r\\n    height: 8px; /* horizontal scrollbar */\\r\\n  }\\r\\n  \\r\\n  .tjola-stack::-webkit-scrollbar-track {\\r\\n    background: transparent;\\r\\n  }\\r\\n  \\r\\n  .tjola-stack::-webkit-scrollbar-thumb {\\r\\n    background: #dbdbdb;\\r\\n    border-radius: 14px;\\r\\n    border: calc(14px / 4) solid #ccc;\\r\\n  }\\r\\n  \\r\\n  .tjola-stack::-webkit-scrollbar-thumb:hover {\\r\\n    background: #a3a3a3;\\r\\n  }\\r\\n  /* Chrome, Edge, Safari */\\r\\n  \\r\\n  .tjola-stack {\\r\\n    scroll-behavior: smooth;\\r\\n    justify-content: space-around;\\r\\n  }\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./MultiSwitch/app.css\"],\"names\":[],\"mappings\":\"AAAA,YAAY;AACZ;IACI,qBAAqB,EAAE,iBAAiB;IACxC,oCAAoC;EACtC;;EAEA,8EAA8E;EAC9E,YAAY;;EAEZ,yBAAyB;EACzB;IACE,UAAU,EAAE,uBAAuB;IACnC,WAAW,EAAE,yBAAyB;EACxC;;EAEA;IACE,uBAAuB;EACzB;;EAEA;IACE,mBAAmB;IACnB,mBAAmB;IACnB,iCAAiC;EACnC;;EAEA;IACE,mBAAmB;EACrB;EACA,yBAAyB;;EAEzB;IACE,uBAAuB;IACvB,6BAA6B;EAC/B\",\"sourcesContent\":[\"/* Firefox */\\r\\n.tjola-stack {\\r\\n    scrollbar-width: thin; /* none | auto  */\\r\\n    scrollbar-color: #dbdbdb transparent;\\r\\n  }\\r\\n  \\r\\n  /* The first applies to the thumb of the scrollbar, the second to the track. */\\r\\n  /* Firefox */\\r\\n  \\r\\n  /* Chrome, Edge, Safari */\\r\\n  .tjola-stack::-webkit-scrollbar {\\r\\n    width: 8px; /* vertical scrollbar */\\r\\n    height: 8px; /* horizontal scrollbar */\\r\\n  }\\r\\n  \\r\\n  .tjola-stack::-webkit-scrollbar-track {\\r\\n    background: transparent;\\r\\n  }\\r\\n  \\r\\n  .tjola-stack::-webkit-scrollbar-thumb {\\r\\n    background: #dbdbdb;\\r\\n    border-radius: 14px;\\r\\n    border: calc(14px / 4) solid #ccc;\\r\\n  }\\r\\n  \\r\\n  .tjola-stack::-webkit-scrollbar-thumb:hover {\\r\\n    background: #a3a3a3;\\r\\n  }\\r\\n  /* Chrome, Edge, Safari */\\r\\n  \\r\\n  .tjola-stack {\\r\\n    scroll-behavior: smooth;\\r\\n    justify-content: space-around;\\r\\n  }\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport { StoryObj } from '@storybook/react';\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\n\r\nexport const Colors = Template.bind({}) as StoryObj<StoryArgs>;\r\nColors.args = {\r\n  useColorForLabel: 'No',\r\n  pillColorOn: undefined,\r\n  thumbColorOn: undefined,\r\n  pillColorHoverOn: undefined,\r\n  pillColorOff: undefined,\r\n  thumbColorOff: undefined,\r\n  thumbColorHoverOff: undefined,\r\n};\r\n\r\nColors.parameters = {\r\n  controls: {\r\n    include: [\r\n      'useColorForLabel',\r\n      'pillColorOn',\r\n      'pillColorHoverOn',\r\n      'thumbColorOn',\r\n      'pillColorOff',\r\n      'thumbColorOff',\r\n      'thumbColorHoverOff',\r\n    ],\r\n  },\r\n};\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nexport const FIRST_OPTION = 'First Option';\r\nexport const SECOND_OPTION = 'Second Option';\r\nexport const THIRD_OPTION = 'Third Option';\r\nexport const FOURTH_OPTION = 'Fourth Option';\r\nexport const FIFTH_OPTION = 'Fifth Option';\r\nexport const SIXTH_OPTION = 'Sixth Option';\r\nexport const SEVENTH_OPTION = 'Seventh Option';\r\nexport const EIGHTH_OPTION = 'Eighth Option';\r\nexport const NINTH_OPTION = 'Ninth Option';\r\nexport const TENTH_OPTION = 'Tenth Option';\r\nexport const ELEVENTH_OPTION = 'Eleventh Option';","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport { StoryObj } from '@storybook/react';\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\n\r\nexport const Default = Template.bind({}) as StoryObj<StoryArgs>;\r\n\r\nDefault.parameters = {\r\n  controls: {\r\n    include: ['selectedOptions', 'controlType'],\r\n  },\r\n};\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\nimport { StoryObj } from '@storybook/react';\r\n\r\nexport const Disabled = Template.bind({}) as StoryObj<StoryArgs>;\r\n\r\nDisabled.args = {\r\n  disabled: true,\r\n  visible: true,\r\n  selectedOptions: [],\r\n};\r\n\r\nDisabled.parameters = {\r\n  controls: {\r\n    include: ['disabled'],\r\n  },\r\n};\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\nimport { StoryObj } from '@storybook/react';\r\n\r\nexport const FixedHeight = Template.bind({}) as StoryObj<StoryArgs>;\r\nFixedHeight.args = {\r\n  height: 100,\r\n};\r\n\r\nFixedHeight.parameters = {\r\n  controls: {\r\n    include: ['height'],\r\n  },\r\n};\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\nimport { StoryObj } from '@storybook/react';\r\n\r\nexport const OptionsGroup = Template.bind({}) as StoryObj<StoryArgs>;\r\nOptionsGroup.args = {\r\n  columns: 2,\r\n};\r\n\r\nOptionsGroup.parameters = {\r\n  controls: {\r\n    include: ['columns'],\r\n  },\r\n};\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\nimport { StoryObj } from '@storybook/react';\r\n\r\nexport const Orientation = Template.bind({}) as StoryObj<StoryArgs>;\r\nOrientation.args = {\r\n  orientation: '0',\r\n  columns: 5,\r\n};\r\n\r\nOrientation.parameters = {\r\n  controls: {\r\n    include: ['orientation', 'columns'],\r\n  },\r\n};\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport Template from '@albanian-xrm/stories/Template';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\nimport { StoryObj } from '@storybook/react';\r\n\r\nexport const Visibility = Template.bind({}) as StoryObj<StoryArgs>;\r\nVisibility.args = {\r\n  disabled: false,\r\n  visible: true,\r\n  selectedOptions: [],\r\n};\r\n\r\nVisibility.parameters = {\r\n  controls: {\r\n    include: ['visible'],\r\n  },\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { IProps } from '@albanian-xrm/multi-switch/App.types';\r\n\r\nconst useStackItemStyles = (height?: number) => {\r\n    return useMemo(() => {\r\n        return height\r\n            ? ({\r\n                height,\r\n                overflowY: 'auto',\r\n            } as IProps\r\n            )\r\n            : {};\r\n    }, [height]);\r\n}\r\n\r\nexport default useStackItemStyles;","import { useMemo } from \"react\";\r\nimport { IToggleStyles } from \"@fluentui/react\";\r\n\r\nconst useSwitchStyles = (\r\n    pillColorOn?: string,\r\n    pillColorOff?: string,\r\n    pillColorHoverOn?: string,\r\n    thumbColorOn?: string,\r\n    thumbColorOff?: string,\r\n    thumbColorHoverOff?: string) => {\r\n    return useMemo(() =>\r\n        [{\r\n            container: { marginBottom: 0 },\r\n            pill: {\r\n                background: pillColorOff,\r\n                ':hover .ms-Toggle-thumb': {\r\n                    background: thumbColorHoverOff\r\n                }\r\n            },\r\n            thumb: {\r\n                background: thumbColorOff,\r\n            }\r\n        }, {\r\n            container: { marginBottom: 0 },\r\n            pill: {\r\n                background: pillColorOn,\r\n                \":hover\": {\r\n                    background: pillColorHoverOn\r\n                }\r\n            },\r\n            thumb: {\r\n                background: thumbColorOn\r\n            }\r\n        }] as Partial<IToggleStyles>[],\r\n        [pillColorOn, pillColorOff, pillColorHoverOn, thumbColorOn, thumbColorOff, thumbColorHoverOff]);\r\n}\r\n\r\nexport default useSwitchStyles;\r\n","import { useMemo } from \"react\";\r\n\r\ntype OptionMetadatas = ComponentFramework.PropertyHelper.OptionMetadata[];\r\n\r\nconst useRowsColumns = (options: OptionMetadatas, columns: number, horizontal: boolean) => {\r\n    return useMemo(() => {\r\n        if (horizontal) {\r\n            const rows = Math.ceil(options.length / columns);\r\n            const optionsGroup = new Array<OptionMetadatas>(rows);\r\n            for (let i = 0; i < options.length; i++) {\r\n                if (optionsGroup[i % rows] === undefined) {\r\n                    optionsGroup[i % rows] = [];\r\n                }\r\n                optionsGroup[i % rows].push(options[i]);\r\n            }\r\n            return optionsGroup;\r\n        } // else vertical\r\n        const optionsGroup = new Array<OptionMetadatas>(columns);\r\n        for (let i = 0; i < options.length; i++) {\r\n            if (optionsGroup[i % columns] === undefined) {\r\n                optionsGroup[i % columns] = [];\r\n            }\r\n            optionsGroup[i % columns].push(options[i]);\r\n        }\r\n        return optionsGroup;\r\n    }, [options, columns, horizontal]);\r\n}\r\n\r\nexport default useRowsColumns;","import { useMemo } from \"react\";\r\nimport { ICheckboxStyles, IToggleStyles } from \"@fluentui/react\";\r\nimport { IAppProps } from '@albanian-xrm/multi-switch/App.types';\r\n\r\ntype OptionMetadatas = ComponentFramework.PropertyHelper.OptionMetadata[];\r\n\r\nconst useLabelColors = (options: OptionMetadatas, useColorForLabel: IAppProps['useColorForLabel'], checkboxes?: boolean) => {\r\n    return useMemo(() => {\r\n        const labelColors: {\r\n            [key: number]: Partial<IToggleStyles>\r\n        } = {};\r\n        options.forEach(option => {\r\n            labelColors[option.Value] = useColorForLabel === 'Yes' && option.Color ? (checkboxes ? {\r\n                text:\r\n                {\r\n                    color: option.Color\r\n                }\r\n            } as Partial<ICheckboxStyles> : {\r\n                label: {\r\n                    color: option.Color\r\n                }\r\n            } as Partial<IToggleStyles>) : {};\r\n        })\r\n        return labelColors;\r\n    }, [options, useColorForLabel, checkboxes]);\r\n}\r\n\r\nexport default useLabelColors;\r\n","import React from 'react';\r\nimport { Checkbox, IToggleStyles, Stack, Toggle } from '@fluentui/react';\r\nimport { initializeIcons } from '@fluentui/font-icons-mdl2';\r\n\r\nimport { IAppProps } from '@albanian-xrm/multi-switch/App.types';\r\nimport useStackItemStyles from '@albanian-xrm/multi-switch/hooks/useStackItemStyles';\r\nimport useSwitchStyles from '@albanian-xrm/multi-switch/hooks/useSwitchStyles';\r\nimport useRowsColumns from '@albanian-xrm/multi-switch/hooks/useRowsColumns';\r\nimport useLabelColors from './hooks/useLabelColors';\r\n\r\ninitializeIcons(undefined, { disableWarnings: true });\r\nconst stackTokens = { childrenGap: 10 };\r\n\r\nconst App = ({\r\n  checkboxes,\r\n  disabled = false,\r\n  fixedHeight,\r\n  options,\r\n  horizontal = false,\r\n  selectedOptions,\r\n  visible,\r\n  onChecked,\r\n  columns = 2,\r\n  pillColorOn = undefined,\r\n  pillColorOff = undefined,\r\n  pillColorHoverOn = undefined,\r\n  thumbColorOn = undefined,\r\n  thumbColorOff = undefined,\r\n  thumbColorHoverOff = undefined,\r\n  useColorForLabel = 'No'\r\n}: IAppProps) => {\r\n  const nonShrinkingStackItemStyles = useStackItemStyles(fixedHeight);\r\n  const switchStyles = useSwitchStyles(pillColorOn, pillColorOff, pillColorHoverOn, thumbColorOn, thumbColorOff, thumbColorHoverOff);\r\n  const optionsGroup = useRowsColumns(options, columns, horizontal);\r\n  const labelColors = useLabelColors(options, useColorForLabel, checkboxes);\r\n  return visible ? (\r\n    <div className=\"tjola-stack\" style={nonShrinkingStackItemStyles}>\r\n      <Stack horizontal tokens={stackTokens}>\r\n        {optionsGroup.map((options, index) => (\r\n          <Stack key={index} tokens={checkboxes ? stackTokens : undefined} styles={nonShrinkingStackItemStyles}>\r\n            {options?.map((option) => {\r\n              const checked = (selectedOptions || []).findIndex((value) => value === option.Value) >= 0;\r\n              const styles = { ...switchStyles[checked ? 1 : 0], ...labelColors[option.Value] };\r\n              return checkboxes === true ? (\r\n                <Checkbox\r\n                  key={option.Value}\r\n                  label={option.Label}\r\n                  disabled={disabled}\r\n                  checked={checked}\r\n                  styles={labelColors[option.Value]}\r\n                  onChange={(event, checked) => onChecked(checked || false, option.Value)}\r\n                />\r\n              ) : (\r\n                <Toggle\r\n                  key={option.Value}\r\n                  label={option.Label}\r\n                  disabled={disabled}\r\n                  checked={checked}\r\n                  onChange={(event, checked) => onChecked(checked || false, option.Value)}\r\n                  styles={styles}\r\n                  inlineLabel\r\n                />\r\n              )\r\n            })}\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createElement } from 'react';\r\nimport { render, unmountComponentAtNode } from 'react-dom';\r\n\r\nimport App from '@albanian-xrm/multi-switch/App';\r\nimport { IInputs, IOutputs } from '@albanian-xrm/multi-switch/generated/ManifestTypes';\r\nimport { CheckedHandler, IAppProps } from '@albanian-xrm/multi-switch/App.types';\r\n\r\nexport class MultiSwitch implements ComponentFramework.StandardControl<IInputs, IOutputs> {\r\n  private checkboxes: boolean;\r\n  private disabled: boolean;\r\n  private horizontal: boolean;\r\n  private notifyOutputChanged: () => void;\r\n  private onChecked: CheckedHandler;\r\n  private value: number[];\r\n  private visible: boolean;\r\n  private height?: number;\r\n  private columns?: number;\r\n  private pillColorHoverOn?: string;\r\n  private pillColorOff?: string;\r\n  private pillColorOn?: string;\r\n  private thumbColorHoverOff?: string;\r\n  private thumbColorOff?: string\r\n  private thumbColorOn?: string;\r\n  private useColorForLabel?: IAppProps['useColorForLabel'];\r\n\r\n  private container: HTMLDivElement;\r\n  /**\r\n   * Empty constructor.\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n   * Used to initialize the control instance. Controls can kick off remote server calls and other initialization actions here.\r\n   * Data-set values are not initialized here, use updateView.\r\n   * @param context The entire property bag available to control via Context Object; It contains values as set up by the customizer mapped to property names defined in the manifest, as well as utility functions.\r\n   * @param notifyOutputChanged A callback method to alert the framework that the control has new outputs ready to be retrieved asynchronously.\r\n   * @param state A piece of data that persists in one session for a single user. Can be set at any point in a controls life cycle by calling 'setControlState' in the Mode interface.\r\n   * @param container If a control is marked control-type='standard', it will receive an empty div element within which it can render its content.\r\n   */\r\n  public init(\r\n    context: ComponentFramework.Context<IInputs>,\r\n    notifyOutputChanged: () => void,\r\n    state: ComponentFramework.Dictionary,\r\n    container: HTMLDivElement,\r\n  ): void {\r\n    this.notifyOutputChanged = notifyOutputChanged;\r\n    this.container = container;\r\n    this.onChecked = (checked, value) => {\r\n      if (checked) {\r\n        this.value = [value, ...this.value.filter((oldValue) => oldValue !== value)];\r\n      } else {\r\n        this.value = this.value.filter((oldValue) => oldValue !== value);\r\n      }\r\n      this.notifyOutputChanged();\r\n    };\r\n\r\n    this.mapContextAndRender(context);\r\n  }\r\n\r\n  private mapContextAndRender(context: ComponentFramework.Context<IInputs>) {\r\n    this.disabled = context.mode.isControlDisabled;\r\n    this.visible = context.mode.isVisible;\r\n    this.value = context.parameters.selection.raw || [];\r\n    this.checkboxes = context.parameters.controlType.raw === '1';\r\n    this.height = context.parameters.height.raw || undefined;\r\n    this.columns = context.parameters.columns.raw || undefined;\r\n    this.horizontal = context.parameters.orientation.raw === '1';\r\n    this.pillColorHoverOn = context.parameters.pillColorHoverOn.raw || undefined;\r\n    this.pillColorOff = context.parameters.pillColorOff.raw || undefined;\r\n    this.pillColorOn = context.parameters.pillColorOn.raw || undefined;\r\n    this.thumbColorHoverOff = context.parameters.thumbColorHoverOff.raw || undefined;\r\n    this.thumbColorOff = context.parameters.thumbColorOff.raw || undefined;\r\n    this.thumbColorOn = context.parameters.thumbColorOn.raw || undefined;\r\n    this.useColorForLabel = context.parameters.useColorForLabel.raw;\r\n\r\n    this.render(context.parameters.selection.attributes?.Options || []);\r\n  }\r\n\r\n  private render(options: ComponentFramework.PropertyHelper.OptionMetadata[]) {\r\n    const app = createElement(\r\n      App,\r\n      {\r\n        checkboxes: this.checkboxes,\r\n        disabled: this.disabled,\r\n        visible: this.visible,\r\n        options,\r\n        selectedOptions: this.value,\r\n        onChecked: this.onChecked,\r\n        fixedHeight: this.height,\r\n        columns: this.columns,\r\n        horizontal: this.horizontal,\r\n        pillColorHoverOn: this.pillColorHoverOn,\r\n        pillColorOff: this.pillColorOff,\r\n        pillColorOn: this.pillColorOn,\r\n        thumbColorHoverOff: this.thumbColorHoverOff,\r\n        thumbColorOff: this.thumbColorOff,\r\n        thumbColorOn: this.thumbColorOn,\r\n        useColorForLabel: this.useColorForLabel,\r\n      },\r\n      null,\r\n    );\r\n    // Add control initialization code\r\n    render(app, this.container);\r\n  }\r\n\r\n  /**\r\n   * Called when any value in the property bag has changed. This includes field values, data-sets, global values such as container height and width, offline status, control metadata values such as label, visible, etc.\r\n   * @param context The entire property bag available to control via Context Object; It contains values as set up by the customizer mapped to names defined in the manifest, as well as utility functions\r\n   */\r\n  public updateView(context: ComponentFramework.Context<IInputs>): void {\r\n    this.mapContextAndRender(context);\r\n  }\r\n\r\n  /**\r\n   * It is called by the framework prior to a control receiving new data.\r\n   * @returns an object based on nomenclature defined in manifest, expecting object[s] for property marked as “bound” or “output”\r\n   */\r\n  public getOutputs(): IOutputs {\r\n    return { selection: [...this.value] };\r\n  }\r\n\r\n  /**\r\n   * Called when the control is to be removed from the DOM tree. Controls should use this call for cleanup.\r\n   * i.e. cancelling any pending remote calls, removing listeners, etc.\r\n   */\r\n  public destroy(): void {\r\n    unmountComponentAtNode(this.container);\r\n  }\r\n}\r\n","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useArgs } from '@storybook/client-api';\r\nimport {\r\n    ComponentFrameworkMockGenerator,\r\n    EnumPropertyMock,\r\n    MultiSelectOptionSetPropertyMock,\r\n    NumberPropertyMock,\r\n    ShkoOnline,\r\n    StringPropertyMock\r\n} from '@shko.online/componentframework-mock'\r\n\r\nimport { MultiSwitch } from '@albanian-xrm/multi-switch/index';\r\nimport { IInputs, IOutputs } from '@albanian-xrm/multi-switch/generated/ManifestTypes';\r\nimport { StoryFn } from '@storybook/react';\r\nimport { StoryArgs } from '@albanian-xrm/stories/StoryArgs';\r\n\r\n\r\nconst Template: StoryFn<StoryArgs> = ({ }) => {\r\n    const [args, updateArgs] = useArgs<StoryArgs>();\r\n    const container = useRef<HTMLDivElement>(null);\r\n    const [, setLoaded] = useState<boolean>(false);\r\n\r\n    const mockGenerator = useMemo(() => {\r\n        if (container.current === null) return;\r\n        const innerContainer = document.createElement('div');\r\n        container.current.appendChild(innerContainer);\r\n\r\n        const mockGenerator: ComponentFrameworkMockGenerator<IInputs, IOutputs> =\r\n            new ComponentFrameworkMockGenerator(MultiSwitch, {\r\n                selection: MultiSelectOptionSetPropertyMock,\r\n                columns: NumberPropertyMock,\r\n                controlType: EnumPropertyMock<\"0\" | \"1\">,\r\n                height: NumberPropertyMock,\r\n                orientation: EnumPropertyMock<\"0\" | \"1\">,\r\n                pillColorHoverOn: StringPropertyMock,\r\n                pillColorOff: StringPropertyMock,\r\n                pillColorOn: StringPropertyMock,\r\n                thumbColorHoverOff: StringPropertyMock,\r\n                thumbColorOff: StringPropertyMock,\r\n                thumbColorOn: StringPropertyMock,\r\n                useColorForLabel: EnumPropertyMock<'Yes' | 'No'>\r\n            }, innerContainer);\r\n\r\n        var selectionMetadata =\r\n            mockGenerator.metadata.getAttributeMetadata('!CanvasApp', 'selection') as\r\n            ShkoOnline.PickListAttributeMetadata;\r\n\r\n        selectionMetadata.OptionSet = {\r\n            IsCustomOptionSet: true,\r\n            MetadataId: '',\r\n            Name: 'optionset',\r\n            OptionSetType: 11,\r\n            Options: {\r\n            }\r\n        };\r\n\r\n        args.options.forEach((option: {\r\n            Value: number;\r\n            Label: string;\r\n            Color?: string | undefined;\r\n        }) => {\r\n            selectionMetadata.OptionSet.Options[option.Value] = option;\r\n        })\r\n\r\n        mockGenerator.metadata.upsertAttributeMetadata('!CanvasApp', selectionMetadata);\r\n        mockGenerator.context.mode.isControlDisabled = args.disabled;\r\n        mockGenerator.context.mode.isVisible = args.visible;\r\n        mockGenerator.context._SetCanvasItems({\r\n            selection: args.selectedOptions || undefined,\r\n            height: args.height,\r\n            columns: args.columns,\r\n            controlType: args.controlType,\r\n            orientation: args.orientation,\r\n            pillColorOn: args.pillColorOn || undefined,\r\n            thumbColorOn: args.thumbColorOn || undefined,\r\n            pillColorHoverOn: args.pillColorHoverOn || undefined,\r\n            pillColorOff: args.pillColorOff || undefined,\r\n            thumbColorOff: args.thumbColorOff || undefined,\r\n            thumbColorHoverOff: args.thumbColorHoverOff || undefined,\r\n            useColorForLabel: args.useColorForLabel || undefined,\r\n        });\r\n\r\n        mockGenerator.onOutputChanged.callsFake(() => {\r\n            mockGenerator.context._parameters.selection._Refresh();\r\n            updateArgs({ selectedOptions: mockGenerator.context._parameters.selection.raw });\r\n        })\r\n\r\n        mockGenerator.ExecuteInit();\r\n        return mockGenerator;\r\n    }, [container.current]);\r\n\r\n    if (mockGenerator) {\r\n        mockGenerator.context.mode.isVisible = args.visible;\r\n        mockGenerator.context.mode.isControlDisabled = args.disabled;\r\n        mockGenerator.context._parameters.columns._SetValue(args.columns);\r\n        mockGenerator.context._parameters.controlType._SetValue(args.controlType);\r\n        mockGenerator.context._parameters.height._SetValue(args.height);\r\n        mockGenerator.context._parameters.orientation._SetValue(args.orientation);\r\n        mockGenerator.context._parameters.pillColorHoverOn._SetValue(args.pillColorHoverOn);\r\n        mockGenerator.context._parameters.pillColorOff._SetValue(args.pillColorOff);\r\n        mockGenerator.context._parameters.pillColorOn._SetValue(args.pillColorOn);\r\n        mockGenerator.context._parameters.selection._SetValue(args.selectedOptions);\r\n        mockGenerator.context._parameters.thumbColorHoverOff._SetValue(args.thumbColorHoverOff);\r\n        mockGenerator.context._parameters.thumbColorOff._SetValue(args.thumbColorOff);\r\n        mockGenerator.context._parameters.thumbColorOn._SetValue(args.thumbColorOn);\r\n        mockGenerator.context._parameters.useColorForLabel._SetValue(args.useColorForLabel);\r\n        mockGenerator.ExecuteUpdateView();\r\n    }\r\n\r\n    useEffect(() => { setLoaded(true) }, [container.current]);\r\n    return <div ref={container} ></div>;\r\n\r\n};\r\n\r\nexport default Template;","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport { ArgTypes } from \"@storybook/react\";\r\nimport { StoryArgs } from \"@albanian-xrm/stories/StoryArgs\";\r\n\r\nexport const argTypes :Partial<ArgTypes<StoryArgs>> = {\r\n    controlType: {\r\n        description: 'Using this property you can choose Switches or Checkboxes',\r\n        options: ['0', '1'],\r\n        control: {\r\n          type: 'select',\r\n          labels: {\r\n            '0': 'Switches',\r\n            '1': 'Checkboxes',\r\n          },\r\n        },\r\n        table: {\r\n          defaultValue: { summary: 'Switches' },\r\n        },\r\n      },\r\n      pillColorOn: {\r\n        control: { type: 'color' },\r\n      },\r\n      pillColorOff: {\r\n        control: { type: 'color' },\r\n      },\r\n      pillColorHoverOn: {\r\n        control: { type: 'color' },\r\n      },\r\n      thumbColorOn: {\r\n        control: { type: 'color' },\r\n      },\r\n      thumbColorOff: {\r\n        control: { type: 'color' },\r\n      },\r\n      thumbColorHoverOff: {\r\n        control: { type: 'color' },\r\n      },\r\n      selectedOptions: {\r\n        control: 'object',\r\n      },\r\n}","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nimport { StoryArgs } from \"@albanian-xrm/stories/StoryArgs\";\r\n\r\nimport {\r\n    FIFTH_OPTION,\r\n    FIRST_OPTION,\r\n    FOURTH_OPTION,\r\n    EIGHTH_OPTION,\r\n    ELEVENTH_OPTION,\r\n    NINTH_OPTION,\r\n    TENTH_OPTION,\r\n    SECOND_OPTION,\r\n    SEVENTH_OPTION,\r\n    SIXTH_OPTION,\r\n    THIRD_OPTION,\r\n  } from '@albanian-xrm/stories/MultiSwitch/Constants';\r\n\r\nexport const defaultArgs : Partial<StoryArgs> = {\r\n    visible: true, \r\n    height: 0,\r\n    controlType: '0',\r\n    orientation: '0',\r\n    pillColorHoverOn: null,\r\n    pillColorOff: null,\r\n    pillColorOn: null,\r\n    thumbColorHoverOff: null,\r\n    thumbColorOff: null,\r\n    thumbColorOn: null,\r\n    useColorForLabel: 'No',\r\n    columns: 1,\r\n    options: [\r\n      { Value: 0, Label: FIRST_OPTION, Color: '#dd0000' },\r\n      { Value: 1, Label: SECOND_OPTION, Color: '#dd0000' },\r\n      { Value: 2, Label: THIRD_OPTION, Color: '#dddd00' },\r\n      { Value: 4, Label: FOURTH_OPTION, Color: '#dddd00' },\r\n      { Value: 5, Label: FIFTH_OPTION, Color: '#dddddd' },\r\n      { Value: 6, Label: SIXTH_OPTION, Color: '#dddddd' },\r\n      { Value: 7, Label: SEVENTH_OPTION, Color: '#dddddd' },\r\n      { Value: 8, Label: EIGHTH_OPTION, Color: '#dddddd' },\r\n      { Value: 9, Label: NINTH_OPTION, Color: '#dddddd' },\r\n      { Value: 10, Label: TENTH_OPTION, Color: '#dddddd' },\r\n      { Value: 11, Label: ELEVENTH_OPTION, Color: '#dddddd' },\r\n    ],\r\n    selectedOptions: [],\r\n  }","/*\r\n    Copyright (c) 2022 Betim Beja and Shko Online LLC\r\n    Licensed under the MIT license.\r\n*/\r\n\r\nexport const timeout = 2000;\r\n\r\nconst delay = () =>\r\n    new Promise<void>((resolve) => {\r\n        setTimeout(() => resolve(), timeout / 2);\r\n    });\r\n\r\nexport default delay;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./app.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./app.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","Colors","args","useColorForLabel","pillColorOn","thumbColorOn","pillColorHoverOn","pillColorOff","thumbColorOff","thumbColorHoverOff","parameters","controls","include","FIRST_OPTION","SECOND_OPTION","THIRD_OPTION","FOURTH_OPTION","FIFTH_OPTION","SIXTH_OPTION","SEVENTH_OPTION","EIGHTH_OPTION","NINTH_OPTION","TENTH_OPTION","ELEVENTH_OPTION","Default","Disabled","disabled","visible","selectedOptions","FixedHeight","height","OptionsGroup","columns","Orientation","orientation","Visibility","useMemo","overflowY","container","marginBottom","pill","background","thumb","options","horizontal","rows","Math","ceil","length","optionsGroup","Array","i","checkboxes","labelColors","forEach","option","Value","Color","text","color","label","disableWarnings","stackTokens","childrenGap","App","fixedHeight","onChecked","nonShrinkingStackItemStyles","switchStyles","className","style","Stack","tokens","map","index","key","styles","checked","findIndex","value","Checkbox","Label","onChange","event","Toggle","inlineLabel","MultiSwitch","constructor","init","context","notifyOutputChanged","state","this","filter","oldValue","mapContextAndRender","mode","isControlDisabled","isVisible","selection","raw","controlType","render","attributes","Options","app","createElement","updateView","getOutputs","destroy","unmountComponentAtNode","updateArgs","useArgs","useRef","setLoaded","useState","mockGenerator","current","innerContainer","document","appendChild","selectionMetadata","metadata","getAttributeMetadata","OptionSet","IsCustomOptionSet","MetadataId","Name","OptionSetType","upsertAttributeMetadata","_SetCanvasItems","onOutputChanged","callsFake","_parameters","_Refresh","ExecuteInit","_SetValue","ExecuteUpdateView","useEffect","ref","argTypes","description","control","type","labels","table","defaultValue","summary","defaultArgs","timeout","Promise","resolve","setTimeout","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement"],"sourceRoot":""}